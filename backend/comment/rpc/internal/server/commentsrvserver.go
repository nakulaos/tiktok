// Code generated by goctl. DO NOT EDIT.
// Source: comment.proto

package server

import (
	"context"

	"tiktok/comment/rpc/comment"
	"tiktok/comment/rpc/internal/logic"
	"tiktok/comment/rpc/internal/svc"
)

type CommentSrvServer struct {
	svcCtx *svc.ServiceContext
	comment.UnimplementedCommentSrvServer
}

func NewCommentSrvServer(svcCtx *svc.ServiceContext) *CommentSrvServer {
	return &CommentSrvServer{
		svcCtx: svcCtx,
	}
}

func (s *CommentSrvServer) CommentAction(ctx context.Context, in *comment.CommentActionRequest) (*comment.CommentActionResponse, error) {
	l := logic.NewCommentActionLogic(ctx, s.svcCtx)
	return l.CommentAction(in)
}

func (s *CommentSrvServer) CommentList(ctx context.Context, in *comment.CommentListRequest) (*comment.CommentListResponse, error) {
	l := logic.NewCommentListLogic(ctx, s.svcCtx)
	return l.CommentList(in)
}

func (s *CommentSrvServer) CommentActionRevert(ctx context.Context, in *comment.CommentActionRequest) (*comment.CommentActionResponse, error) {
	l := logic.NewCommentActionRevertLogic(ctx, s.svcCtx)
	return l.CommentActionRevert(in)
}

func (s *CommentSrvServer) DanMuAction(ctx context.Context, in *comment.DanmuActionRequest) (*comment.DanmuActionResponse, error) {
	l := logic.NewDanMuActionLogic(ctx, s.svcCtx)
	return l.DanMuAction(in)
}

func (s *CommentSrvServer) DanMuList(ctx context.Context, in *comment.DanmuListRequest) (*comment.DanmuListResponse, error) {
	l := logic.NewDanMuListLogic(ctx, s.svcCtx)
	return l.DanMuList(in)
}

func (s *CommentSrvServer) PrepareCommentAction(ctx context.Context, in *comment.CommentActionRequest) (*comment.PrepareCommentAction, error) {
	l := logic.NewPrepareCommentActionLogic(ctx, s.svcCtx)
	return l.PrepareCommentAction(in)
}

func (s *CommentSrvServer) FindComment(ctx context.Context, in *comment.CommentActionRequest) (*comment.FindCommentResp, error) {
	l := logic.NewFindCommentLogic(ctx, s.svcCtx)
	return l.FindComment(in)
}
