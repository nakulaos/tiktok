// Code generated by goctl. DO NOT EDIT.
package types

type FavoriteListReq struct {
	Uid int64 `form:"uid" validate:"required,min=1" msg:"UidFormat"`
}

type FavoriteListResp struct {
	List []UserInfo `json:"list"`
}

type FollowerListReq struct {
	Uid int64 `form:"uid" validate:"required,min=1" msg:"UidFormat"`
}

type FollowerListResp struct {
	List []UserInfo `json:"list"`
}

type FriendListReq struct {
	Uid int64 `form:"uid" validate:"required,min=1" msg:"UidFormat"`
}

type FriendListResp struct {
	List []UserInfo `json:"list"`
}

type UserInfo struct {
	Id              int64  `json:"id"`
	Name            string `json:"name"`
	Gender          int64  `json:"gender"`
	Mobile          string `json:"mobile"`
	Avatar          string `json:"avatar"`
	Dec             string `json:"dec"`
	BackgroundImage string `json:"background_image"`
	FollowCount     uint32 `json:"follow_count"`
	FollowerCount   uint32 `json:"follower_count"`
	TotalFavorited  uint32 `json:"total_favorited"`
	WorkCount       uint32 `json:"work_count"`
	FavoriteCount   uint32 `json:"favorite_count"`
	IsFollow        bool   `json:"is_follow"`
	CoverUrl        string `json:"cover_url"`
	VideoId         int64  `json:"video_id"`
	FriendCount     int64  `json:"friend_count"`
}

type ActionReq struct {
	ToUserID int64 `json:"toUserId" validate:"required,min=1" msg:"ToUserIDFormat"`
	Action   int32 `json:"action" validate:"required,min=1,max=2" msg:"ActionFormat"`
}
